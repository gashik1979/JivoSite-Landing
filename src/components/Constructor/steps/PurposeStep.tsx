import React from 'react';
import { 
  ShoppingCart, 
  Headphones, 
  TrendingUp, 
  Users, 
  BookOpen, 
  Heart,
  Building,
  Zap,
  MessageSquare,
  Phone
} from 'lucide-react';

interface PurposeStepProps {
  data: any;
  updateData: (data: any) => void;
}

const purposes = [
  {
    id: 'sales',
    title: '–ü—Ä–æ–¥–∞–∂–∏',
    description: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∏ –ø—Ä–æ–¥–∞–∂ —á–µ—Ä–µ–∑ —á–∞—Ç',
    icon: ShoppingCart,
    color: 'bg-green-100 text-green-600',
    benefits: ['–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏–¥–æ–≤', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º', '–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π']
  },
  {
    id: 'support',
    title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    description: '–ü–æ–º–æ—â—å –∫–ª–∏–µ–Ω—Ç–∞–º —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏',
    icon: Headphones,
    color: 'bg-blue-100 text-blue-600',
    benefits: ['–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º', '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π']
  },
  {
    id: 'marketing',
    title: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
    description: '–°–±–æ—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
    icon: TrendingUp,
    color: 'bg-purple-100 text-purple-600',
    benefits: ['–û–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤', '–°–±–æ—Ä –æ—Ç–∑—ã–≤–æ–≤', '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π']
  },
  {
    id: 'hr',
    title: 'HR –∏ —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥',
    description: '–†–∞–±–æ—Ç–∞ —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º–∏ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏',
    icon: Users,
    color: 'bg-orange-100 text-orange-600',
    benefits: ['–ü–µ—Ä–≤–∏—á–Ω—ã–π –æ—Ç–±–æ—Ä', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –≤–∞–∫–∞–Ω—Å–∏—è–º', '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤']
  },
  {
    id: 'education',
    title: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
    description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∞–º',
    icon: BookOpen,
    color: 'bg-indigo-100 text-indigo-600',
    benefits: ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–∞—Ö', '–ü–æ–º–æ—â—å —Å—Ç—É–¥–µ–Ω—Ç–∞–º', '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞']
  },
  {
    id: 'healthcare',
    title: '–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ',
    description: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º',
    icon: Heart,
    color: 'bg-red-100 text-red-600',
    benefits: ['–ó–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—Å–ª—É–≥–∞—Ö']
  },
  {
    id: 'realestate',
    title: '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å',
    description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –æ–±—ä–µ–∫—Ç–∞–º –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
    icon: Building,
    color: 'bg-yellow-100 text-yellow-600',
    benefits: ['–ü–æ–∫–∞–∑ –æ–±—ä–µ–∫—Ç–æ–≤', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∏–ø–æ—Ç–µ–∫–µ', '–û—Ü–µ–Ω–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏']
  },
  {
    id: 'services',
    title: '–£—Å–ª—É–≥–∏',
    description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —É—Å–ª—É–≥–∞–º',
    icon: Zap,
    color: 'bg-pink-100 text-pink-600',
    benefits: ['–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥', '–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏', '–ó–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥—É']
  }
];

export default function PurposeStep({ data, updateData }: PurposeStepProps) {
  const handlePurposeToggle = (purposeId: string) => {
    const currentPurposes = data.purpose || [];
    const newPurposes = currentPurposes.includes(purposeId)
      ? currentPurposes.filter((id: string) => id !== purposeId)
      : [...currentPurposes, purposeId];
    
    updateData({ purpose: newPurposes });
  };

  const selectedPurposes = data.purpose || [];

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h3 className="text-lg font-semibold text-gray-900 mb-2">
          –î–ª—è —á–µ–≥–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —á–∞—Ç?
        </h3>
        <p className="text-gray-600">
          –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–µ–ª–µ–π. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Ç –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏.
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {purposes.map((purpose) => {
          const isSelected = selectedPurposes.includes(purpose.id);
          const IconComponent = purpose.icon;
          
          return (
            <div
              key={purpose.id}
              onClick={() => handlePurposeToggle(purpose.id)}
              className={`p-6 border-2 rounded-xl cursor-pointer transition-all hover:shadow-lg ${
                isSelected
                  ? 'border-blue-500 bg-blue-50 shadow-md'
                  : 'border-gray-200 hover:border-gray-300'
              }`}
            >
              <div className="flex items-start space-x-4">
                <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${purpose.color}`}>
                  <IconComponent className="h-6 w-6" />
                </div>
                
                <div className="flex-1">
                  <div className="flex items-center justify-between mb-2">
                    <h4 className="font-semibold text-gray-900">{purpose.title}</h4>
                    {isSelected && (
                      <div className="w-5 h-5 bg-blue-500 rounded-full flex items-center justify-center">
                        <div className="w-2 h-2 bg-white rounded-full"></div>
                      </div>
                    )}
                  </div>
                  
                  <p className="text-sm text-gray-600 mb-3">
                    {purpose.description}
                  </p>
                  
                  <div className="space-y-1">
                    {purpose.benefits.map((benefit, index) => (
                      <div key={index} className="flex items-center text-xs text-gray-500">
                        <div className="w-1 h-1 bg-gray-400 rounded-full mr-2"></div>
                        {benefit}
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          );
        })}
      </div>

      {/* Selected Summary */}
      {selectedPurposes.length > 0 && (
        <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-200">
          <h4 className="font-semibold text-blue-900 mb-3">
            –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ü–µ–ª–∏ ({selectedPurposes.length}):
          </h4>
          <div className="flex flex-wrap gap-2">
            {selectedPurposes.map((purposeId: string) => {
              const purpose = purposes.find(p => p.id === purposeId);
              if (!purpose) return null;
              
              return (
                <span
                  key={purposeId}
                  className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium"
                >
                  {purpose.title}
                </span>
              );
            })}
          </div>
        </div>
      )}

      {/* Recommendations */}
      <div className="bg-emerald-50 rounded-lg p-4 border border-emerald-200">
        <h4 className="text-sm font-medium text-emerald-900 mb-2">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
        <ul className="text-sm text-emerald-800 space-y-1">
          <li>‚Ä¢ –î–ª—è –ø—Ä–æ–¥–∞–∂ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏</li>
          <li>‚Ä¢ –î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ–ª–µ–∑–Ω–æ —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π —Å —á–∞—Å—Ç—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏</li>
          <li>‚Ä¢ –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–µ–ª–µ–π, –µ—Å–ª–∏ —á–∞—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ</li>
          <li>‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∂–µ –≤ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</li>
        </ul>
      </div>
    </div>
  );
}