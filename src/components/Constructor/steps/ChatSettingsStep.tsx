import React from 'react';
import { Globe, Phone, Building } from 'lucide-react';

interface ChatSettingsStepProps {
  data: any;
  updateData: (data: any) => void;
}

const countries = [
  { code: 'RU', name: '–†–æ—Å—Å–∏—è', flag: 'üá∑üá∫' },
  { code: 'US', name: '–°–®–ê', flag: 'üá∫üá∏' },
  { code: 'GB', name: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', flag: 'üá¨üáß' },
  { code: 'DE', name: '–ì–µ—Ä–º–∞–Ω–∏—è', flag: 'üá©üá™' },
  { code: 'FR', name: '–§—Ä–∞–Ω—Ü–∏—è', flag: 'üá´üá∑' },
  { code: 'IT', name: '–ò—Ç–∞–ª–∏—è', flag: 'üáÆüáπ' },
  { code: 'ES', name: '–ò—Å–ø–∞–Ω–∏—è', flag: 'üá™üá∏' },
  { code: 'CA', name: '–ö–∞–Ω–∞–¥–∞', flag: 'üá®üá¶' },
  { code: 'AU', name: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', flag: 'üá¶üá∫' },
  { code: 'JP', name: '–Ø–ø–æ–Ω–∏—è', flag: 'üáØüáµ' }
];

export default function ChatSettingsStep({ data, updateData }: ChatSettingsStepProps) {
  const handleInputChange = (field: string, value: string) => {
    updateData({
      chat: {
        ...data.chat,
        [field]: value
      }
    });
  };

  const selectedCountry = countries.find(c => c.code === data.chat.country);

  return (
    <div className="space-y-6">
      {/* Chat Name */}
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-2">
          –ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ *
        </label>
        <div className="relative">
          <Building className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
          <input
            type="text"
            value={data.chat.name}
            onChange={(e) => handleInputChange('name', e.target.value)}
            className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
            placeholder="–ü–æ–¥–¥–µ—Ä–∂–∫–∞ ChatPro"
          />
        </div>
      </div>

      {/* Website */}
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-2">
          –ê–¥—Ä–µ—Å —Å–∞–π—Ç–∞ *
        </label>
        <div className="relative">
          <Globe className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
          <input
            type="url"
            value={data.chat.website}
            onChange={(e) => handleInputChange('website', e.target.value)}
            className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
            placeholder="https://example.com"
          />
        </div>
      </div>

      {/* Phone and Country */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –¢–µ–ª–µ—Ñ–æ–Ω
          </label>
          <div className="relative">
            <Phone className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
            <input
              type="tel"
              value={data.chat.phone}
              onChange={(e) => handleInputChange('phone', e.target.value)}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
              placeholder="+7 (999) 123-45-67"
            />
          </div>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –°—Ç—Ä–∞–Ω–∞
          </label>
          <select
            value={data.chat.country}
            onChange={(e) => handleInputChange('country', e.target.value)}
            className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors"
          >
            {countries.map((country) => (
              <option key={country.code} value={country.code}>
                {country.flag} {country.name}
              </option>
            ))}
          </select>
        </div>
      </div>

      {/* Preview Card */}
      <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-6 border border-blue-100">
        <h4 className="text-lg font-semibold text-gray-900 mb-4">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä</h4>
        <div className="bg-white rounded-lg p-4 shadow-sm">
          <div className="flex items-center space-x-3 mb-3">
            <div className="w-3 h-3 bg-green-400 rounded-full"></div>
            <span className="font-medium text-gray-900">
              {data.chat.name || '–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞'}
            </span>
          </div>
          <div className="text-sm text-gray-600 space-y-1">
            <div className="flex items-center">
              <Globe className="h-4 w-4 mr-2" />
              {data.chat.website || '–ê–¥—Ä–µ—Å —Å–∞–π—Ç–∞'}
            </div>
            {data.chat.phone && (
              <div className="flex items-center">
                <Phone className="h-4 w-4 mr-2" />
                {data.chat.phone}
              </div>
            )}
            <div className="flex items-center">
              <span className="mr-2">{selectedCountry?.flag}</span>
              {selectedCountry?.name}
            </div>
          </div>
        </div>
      </div>

      {/* Tips */}
      <div className="bg-amber-50 rounded-lg p-4 border border-amber-200">
        <h4 className="text-sm font-medium text-amber-900 mb-2">‚ö° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
        <ul className="text-sm text-amber-800 space-y-1">
          <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–Ω—è—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç—Ä–∞–∂–∞–µ—Ç –µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ</li>
          <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞ —É–∫–∞–∑–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (—Å https://)</li>
          <li>‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–º–æ–∂–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º</li>
          <li>‚Ä¢ –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã –≤–ª–∏—è–µ—Ç –Ω–∞ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é –∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å</li>
        </ul>
      </div>
    </div>
  );
}